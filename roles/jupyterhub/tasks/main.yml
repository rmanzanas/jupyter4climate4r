- name: Deploy httpd reverse proxy
  include_tasks: httpd.yml
  when: jupyterhub_httpd_proxy

- name: Install docker
  become: True
  apt: state=present name=docker.io update_cache=True

- name: Add user to the docker group
  become: True
  user: name={{ ansible_user }} groups=docker append=yes

- name: Template docker service
  become: True
  template: src=docker.service.j2 dest=/lib/systemd/system/docker.service
  register: docker_service

- name: Create runtime directory
  file: state=directory path={{ jupyterhub_runtime }}

- name: Template jupyterhub config
  template: src=jupyterhub-config.py.j2 dest={{ jupyterhub_runtime}}/{{ jupyterhub_config }}
  
- name: Pull docker image {{ jupyterhub_docker_image }}
  become: True
  command: docker image pull {{ jupyterhub_docker_image }}

- name: Install oauthAuthenticator and dockerspawner
  pip: name={{ item }} executable={{ miniconda_prefix }}/envs/{{ miniconda_env.name }}/bin/pip
  vars:
    ansible_python_interpreter: "{{ miniconda_prefix }}/envs/{{ miniconda_env.name }}/bin/python3"
  environment:
    PATH: "{{ miniconda_prefix }}/envs/{{ miniconda_env.name }}/bin:{{ ansible_env.PATH }}"
  with_items: ['oauthenticator', 'dockerspawner']

- name: Template jupyterhub systemd service
  become: True
  template: src=jupyterhub.service.j2 dest=/etc/systemd/system/jupyterhub.service mode=0644
  register: jupyterhub_service

- name: Restart systemd
  become: True
  command: systemctl daemon-reload
  when: jupyterhub_service.changed or docker_service.changed

- name: Restart docker
  become: True
  service: name=docker state=restarted
  when: docker_service.changed

